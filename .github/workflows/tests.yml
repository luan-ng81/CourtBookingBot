name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8 (optional)
      continue-on-error: true
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run unit tests
      env:
        CITYSPORTS_USERNAME: test_user
        CITYSPORTS_PASSWORD: test_pass
        EMAIL_TO: test@example.com
        EMAIL_FROM: test@example.com
        EMAIL_PASSWORD: test_pass
      run: |
        python -m pytest test_booking_bot.py -v --tb=short

    - name: Check code formatting (optional)
      continue-on-error: true
      run: |
        pip install black
        black --check --diff .
